### YamlMime:ManagedReference
items:
- uid: QFramework.OOPExtension
  commentId: T:QFramework.OOPExtension
  id: OOPExtension
  parent: QFramework
  children:
  - QFramework.OOPExtension.Example
  - QFramework.OOPExtension.ImplementsInterface``1(System.Object)
  - QFramework.OOPExtension.ImplementsInterface``1(System.Type)
  langs:
  - csharp
  - vb
  name: OOPExtension
  nameWithType: OOPExtension
  fullName: QFramework.OOPExtension
  type: Class
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: OOPExtension
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 751
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  syntax:
    content: public static class OOPExtension
    content.vb: Public Module OOPExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: QFramework.OOPExtension.Example
  commentId: M:QFramework.OOPExtension.Example
  id: Example
  parent: QFramework.OOPExtension
  langs:
  - csharp
  - vb
  name: Example()
  nameWithType: OOPExtension.Example()
  fullName: QFramework.OOPExtension.Example()
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: Example
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 758
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  syntax:
    content: public static void Example()
    content.vb: Public Shared Sub Example
  overload: QFramework.OOPExtension.Example*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.OOPExtension.ImplementsInterface``1(System.Type)
  commentId: M:QFramework.OOPExtension.ImplementsInterface``1(System.Type)
  id: ImplementsInterface``1(System.Type)
  isExtensionMethod: true
  parent: QFramework.OOPExtension
  langs:
  - csharp
  - vb
  name: ImplementsInterface<T>(Type)
  nameWithType: OOPExtension.ImplementsInterface<T>(Type)
  fullName: QFramework.OOPExtension.ImplementsInterface<T>(System.Type)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: ImplementsInterface
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 777
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\nDetermines whether the type implements the specified interface\nand is not an interface itself.\n"
  example: []
  syntax:
    content: public static bool ImplementsInterface<T>(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: Type.
    typeParameters:
    - id: T
      description: The 1st type parameter.
    return:
      type: System.Boolean
      description: <code>true</code>, if interface was implementsed, <code>false</code> otherwise.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImplementsInterface(Of T)(type As Type) As Boolean
  overload: QFramework.OOPExtension.ImplementsInterface*
  nameWithType.vb: OOPExtension.ImplementsInterface(Of T)(Type)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: QFramework.OOPExtension.ImplementsInterface(Of T)(System.Type)
  name.vb: ImplementsInterface(Of T)(Type)
- uid: QFramework.OOPExtension.ImplementsInterface``1(System.Object)
  commentId: M:QFramework.OOPExtension.ImplementsInterface``1(System.Object)
  id: ImplementsInterface``1(System.Object)
  isExtensionMethod: true
  parent: QFramework.OOPExtension
  langs:
  - csharp
  - vb
  name: ImplementsInterface<T>(Object)
  nameWithType: OOPExtension.ImplementsInterface<T>(Object)
  fullName: QFramework.OOPExtension.ImplementsInterface<T>(System.Object)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: ImplementsInterface
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 789
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\nDetermines whether the type implements the specified interface\nand is not an interface itself.\n"
  example: []
  syntax:
    content: public static bool ImplementsInterface<T>(this object obj)
    parameters:
    - id: obj
      type: System.Object
    typeParameters:
    - id: T
      description: The 1st type parameter.
    return:
      type: System.Boolean
      description: <code>true</code>, if interface was implementsed, <code>false</code> otherwise.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ImplementsInterface(Of T)(obj As Object) As Boolean
  overload: QFramework.OOPExtension.ImplementsInterface*
  nameWithType.vb: OOPExtension.ImplementsInterface(Of T)(Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: QFramework.OOPExtension.ImplementsInterface(Of T)(System.Object)
  name.vb: ImplementsInterface(Of T)(Object)
references:
- uid: QFramework
  commentId: N:QFramework
  name: QFramework
  nameWithType: QFramework
  fullName: QFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: QFramework.OOPExtension.Example*
  commentId: Overload:QFramework.OOPExtension.Example
  name: Example
  nameWithType: OOPExtension.Example
  fullName: QFramework.OOPExtension.Example
- uid: QFramework.OOPExtension.ImplementsInterface*
  commentId: Overload:QFramework.OOPExtension.ImplementsInterface
  name: ImplementsInterface
  nameWithType: OOPExtension.ImplementsInterface
  fullName: QFramework.OOPExtension.ImplementsInterface
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

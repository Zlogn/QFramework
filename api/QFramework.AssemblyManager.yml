### YamlMime:ManagedReference
items:
- uid: QFramework.AssemblyManager
  commentId: T:QFramework.AssemblyManager
  id: AssemblyManager
  parent: QFramework
  children:
  - QFramework.AssemblyManager.DefaultCSharpAssembly
  - QFramework.AssemblyManager.GetAssembly(System.String)
  - QFramework.AssemblyManager.GetDefaultAssemblyType(System.String)
  - QFramework.AssemblyManager.GetTypeList(System.String)
  langs:
  - csharp
  - vb
  name: AssemblyManager
  nameWithType: AssemblyManager
  fullName: QFramework.AssemblyManager
  type: Class
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: AssemblyManager
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 799
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\nAssembly 管理器\n"
  example: []
  syntax:
    content: public class AssemblyManager
    content.vb: Public Class AssemblyManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - QFramework.AssemblyManager.QFramework.ClassExtention.IsNull``1
  - QFramework.AssemblyManager.QFramework.ClassExtention.IsNotNull``1
  - System.Object.QFramework.OOPExtension.ImplementsInterface``1
  - System.Object.QFramework.ReflectionExtension.InvokeByReflect(System.String,System.Object[])
  - System.Object.QFramework.ReflectionExtension.GetFieldByReflect(System.String)
  - System.Object.QFramework.ReflectionExtension.GetPropertyByReflect(System.String,System.Object[])
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: QFramework.AssemblyManager.DefaultCSharpAssembly
  commentId: P:QFramework.AssemblyManager.DefaultCSharpAssembly
  id: DefaultCSharpAssembly
  parent: QFramework.AssemblyManager
  langs:
  - csharp
  - vb
  name: DefaultCSharpAssembly
  nameWithType: AssemblyManager.DefaultCSharpAssembly
  fullName: QFramework.AssemblyManager.DefaultCSharpAssembly
  type: Property
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: DefaultCSharpAssembly
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 816
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n获取编辑器默认的程序集Assembly-CSharp.dll\n"
  example: []
  syntax:
    content: public static Assembly DefaultCSharpAssembly { get; }
    parameters: []
    return:
      type: System.Reflection.Assembly
    content.vb: Public Shared ReadOnly Property DefaultCSharpAssembly As Assembly
  overload: QFramework.AssemblyManager.DefaultCSharpAssembly*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: QFramework.AssemblyManager.GetAssembly(System.String)
  commentId: M:QFramework.AssemblyManager.GetAssembly(System.String)
  id: GetAssembly(System.String)
  parent: QFramework.AssemblyManager
  langs:
  - csharp
  - vb
  name: GetAssembly(String)
  nameWithType: AssemblyManager.GetAssembly(String)
  fullName: QFramework.AssemblyManager.GetAssembly(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetAssembly
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 846
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n获取Assembly\n"
  example: []
  syntax:
    content: public static Assembly GetAssembly(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: System.Reflection.Assembly
      description: ''
    content.vb: Public Shared Function GetAssembly(name As String) As Assembly
  overload: QFramework.AssemblyManager.GetAssembly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.AssemblyManager.GetDefaultAssemblyType(System.String)
  commentId: M:QFramework.AssemblyManager.GetDefaultAssemblyType(System.String)
  id: GetDefaultAssemblyType(System.String)
  parent: QFramework.AssemblyManager
  langs:
  - csharp
  - vb
  name: GetDefaultAssemblyType(String)
  nameWithType: AssemblyManager.GetDefaultAssemblyType(String)
  fullName: QFramework.AssemblyManager.GetDefaultAssemblyType(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetDefaultAssemblyType
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 874
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n获取默认的程序集\n"
  example: []
  syntax:
    content: public static Type GetDefaultAssemblyType(string typeName)
    parameters:
    - id: typeName
      type: System.String
      description: ''
    return:
      type: System.Type
      description: ''
    content.vb: Public Shared Function GetDefaultAssemblyType(typeName As String) As Type
  overload: QFramework.AssemblyManager.GetDefaultAssemblyType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.AssemblyManager.GetTypeList(System.String)
  commentId: M:QFramework.AssemblyManager.GetTypeList(System.String)
  id: GetTypeList(System.String)
  parent: QFramework.AssemblyManager
  langs:
  - csharp
  - vb
  name: GetTypeList(String)
  nameWithType: AssemblyManager.GetTypeList(String)
  fullName: QFramework.AssemblyManager.GetTypeList(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetTypeList
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 880
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  syntax:
    content: public static Type[] GetTypeList(string assemblyName)
    parameters:
    - id: assemblyName
      type: System.String
    return:
      type: System.Type[]
    content.vb: Public Shared Function GetTypeList(assemblyName As String) As Type()
  overload: QFramework.AssemblyManager.GetTypeList*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: QFramework
  commentId: N:QFramework
  name: QFramework
  nameWithType: QFramework
  fullName: QFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: QFramework.AssemblyManager.QFramework.ClassExtention.IsNull``1
  commentId: M:QFramework.ClassExtention.IsNull``1(``0)
  parent: QFramework.ClassExtention
  definition: QFramework.ClassExtention.IsNull``1(``0)
  name: IsNull<AssemblyManager>()
  nameWithType: ClassExtention.IsNull<AssemblyManager>()
  fullName: QFramework.ClassExtention.IsNull<QFramework.AssemblyManager>()
  nameWithType.vb: ClassExtention.IsNull(Of AssemblyManager)()
  fullName.vb: QFramework.ClassExtention.IsNull(Of QFramework.AssemblyManager)()
  name.vb: IsNull(Of AssemblyManager)()
  spec.csharp:
  - uid: QFramework.ClassExtention.IsNull``1
    name: IsNull<AssemblyManager>
    nameWithType: ClassExtention.IsNull<AssemblyManager>
    fullName: QFramework.ClassExtention.IsNull<QFramework.AssemblyManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.ClassExtention.IsNull``1
    name: IsNull(Of AssemblyManager)
    nameWithType: ClassExtention.IsNull(Of AssemblyManager)
    fullName: QFramework.ClassExtention.IsNull(Of QFramework.AssemblyManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: QFramework.AssemblyManager.QFramework.ClassExtention.IsNotNull``1
  commentId: M:QFramework.ClassExtention.IsNotNull``1(``0)
  parent: QFramework.ClassExtention
  definition: QFramework.ClassExtention.IsNotNull``1(``0)
  name: IsNotNull<AssemblyManager>()
  nameWithType: ClassExtention.IsNotNull<AssemblyManager>()
  fullName: QFramework.ClassExtention.IsNotNull<QFramework.AssemblyManager>()
  nameWithType.vb: ClassExtention.IsNotNull(Of AssemblyManager)()
  fullName.vb: QFramework.ClassExtention.IsNotNull(Of QFramework.AssemblyManager)()
  name.vb: IsNotNull(Of AssemblyManager)()
  spec.csharp:
  - uid: QFramework.ClassExtention.IsNotNull``1
    name: IsNotNull<AssemblyManager>
    nameWithType: ClassExtention.IsNotNull<AssemblyManager>
    fullName: QFramework.ClassExtention.IsNotNull<QFramework.AssemblyManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.ClassExtention.IsNotNull``1
    name: IsNotNull(Of AssemblyManager)
    nameWithType: ClassExtention.IsNotNull(Of AssemblyManager)
    fullName: QFramework.ClassExtention.IsNotNull(Of QFramework.AssemblyManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.QFramework.OOPExtension.ImplementsInterface``1
  commentId: M:QFramework.OOPExtension.ImplementsInterface``1(System.Object)
  parent: QFramework.OOPExtension
  definition: QFramework.OOPExtension.ImplementsInterface``1(System.Object)
  name: ImplementsInterface<T>()
  nameWithType: OOPExtension.ImplementsInterface<T>()
  fullName: QFramework.OOPExtension.ImplementsInterface<T>()
  nameWithType.vb: OOPExtension.ImplementsInterface(Of T)()
  fullName.vb: QFramework.OOPExtension.ImplementsInterface(Of T)()
  name.vb: ImplementsInterface(Of T)()
  spec.csharp:
  - uid: QFramework.OOPExtension.ImplementsInterface``1
    name: ImplementsInterface<T>
    nameWithType: OOPExtension.ImplementsInterface<T>
    fullName: QFramework.OOPExtension.ImplementsInterface<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.OOPExtension.ImplementsInterface``1
    name: ImplementsInterface(Of T)
    nameWithType: OOPExtension.ImplementsInterface(Of T)
    fullName: QFramework.OOPExtension.ImplementsInterface(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.QFramework.ReflectionExtension.InvokeByReflect(System.String,System.Object[])
  commentId: M:QFramework.ReflectionExtension.InvokeByReflect(System.Object,System.String,System.Object[])
  parent: QFramework.ReflectionExtension
  definition: QFramework.ReflectionExtension.InvokeByReflect(System.Object,System.String,System.Object[])
  name: InvokeByReflect(String, Object[])
  nameWithType: ReflectionExtension.InvokeByReflect(String, Object[])
  fullName: QFramework.ReflectionExtension.InvokeByReflect(System.String, System.Object[])
  nameWithType.vb: ReflectionExtension.InvokeByReflect(String, Object())
  fullName.vb: QFramework.ReflectionExtension.InvokeByReflect(System.String, System.Object())
  name.vb: InvokeByReflect(String, Object())
  spec.csharp:
  - uid: QFramework.ReflectionExtension.InvokeByReflect(System.String,System.Object[])
    name: InvokeByReflect
    nameWithType: ReflectionExtension.InvokeByReflect
    fullName: QFramework.ReflectionExtension.InvokeByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.ReflectionExtension.InvokeByReflect(System.String,System.Object[])
    name: InvokeByReflect
    nameWithType: ReflectionExtension.InvokeByReflect
    fullName: QFramework.ReflectionExtension.InvokeByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.QFramework.ReflectionExtension.GetFieldByReflect(System.String)
  commentId: M:QFramework.ReflectionExtension.GetFieldByReflect(System.Object,System.String)
  parent: QFramework.ReflectionExtension
  definition: QFramework.ReflectionExtension.GetFieldByReflect(System.Object,System.String)
  name: GetFieldByReflect(String)
  nameWithType: ReflectionExtension.GetFieldByReflect(String)
  fullName: QFramework.ReflectionExtension.GetFieldByReflect(System.String)
  spec.csharp:
  - uid: QFramework.ReflectionExtension.GetFieldByReflect(System.String)
    name: GetFieldByReflect
    nameWithType: ReflectionExtension.GetFieldByReflect
    fullName: QFramework.ReflectionExtension.GetFieldByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.ReflectionExtension.GetFieldByReflect(System.String)
    name: GetFieldByReflect
    nameWithType: ReflectionExtension.GetFieldByReflect
    fullName: QFramework.ReflectionExtension.GetFieldByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.QFramework.ReflectionExtension.GetPropertyByReflect(System.String,System.Object[])
  commentId: M:QFramework.ReflectionExtension.GetPropertyByReflect(System.Object,System.String,System.Object[])
  parent: QFramework.ReflectionExtension
  definition: QFramework.ReflectionExtension.GetPropertyByReflect(System.Object,System.String,System.Object[])
  name: GetPropertyByReflect(String, Object[])
  nameWithType: ReflectionExtension.GetPropertyByReflect(String, Object[])
  fullName: QFramework.ReflectionExtension.GetPropertyByReflect(System.String, System.Object[])
  nameWithType.vb: ReflectionExtension.GetPropertyByReflect(String, Object())
  fullName.vb: QFramework.ReflectionExtension.GetPropertyByReflect(System.String, System.Object())
  name.vb: GetPropertyByReflect(String, Object())
  spec.csharp:
  - uid: QFramework.ReflectionExtension.GetPropertyByReflect(System.String,System.Object[])
    name: GetPropertyByReflect
    nameWithType: ReflectionExtension.GetPropertyByReflect
    fullName: QFramework.ReflectionExtension.GetPropertyByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.ReflectionExtension.GetPropertyByReflect(System.String,System.Object[])
    name: GetPropertyByReflect
    nameWithType: ReflectionExtension.GetPropertyByReflect
    fullName: QFramework.ReflectionExtension.GetPropertyByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: QFramework.ClassExtention.IsNull``1(``0)
  commentId: M:QFramework.ClassExtention.IsNull``1(``0)
  name: IsNull<T>(T)
  nameWithType: ClassExtention.IsNull<T>(T)
  fullName: QFramework.ClassExtention.IsNull<T>(T)
  nameWithType.vb: ClassExtention.IsNull(Of T)(T)
  fullName.vb: QFramework.ClassExtention.IsNull(Of T)(T)
  name.vb: IsNull(Of T)(T)
  spec.csharp:
  - uid: QFramework.ClassExtention.IsNull``1(``0)
    name: IsNull<T>
    nameWithType: ClassExtention.IsNull<T>
    fullName: QFramework.ClassExtention.IsNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.ClassExtention.IsNull``1(``0)
    name: IsNull(Of T)
    nameWithType: ClassExtention.IsNull(Of T)
    fullName: QFramework.ClassExtention.IsNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: QFramework.ClassExtention
  commentId: T:QFramework.ClassExtention
  parent: QFramework
  name: ClassExtention
  nameWithType: ClassExtention
  fullName: QFramework.ClassExtention
- uid: QFramework.ClassExtention.IsNotNull``1(``0)
  commentId: M:QFramework.ClassExtention.IsNotNull``1(``0)
  name: IsNotNull<T>(T)
  nameWithType: ClassExtention.IsNotNull<T>(T)
  fullName: QFramework.ClassExtention.IsNotNull<T>(T)
  nameWithType.vb: ClassExtention.IsNotNull(Of T)(T)
  fullName.vb: QFramework.ClassExtention.IsNotNull(Of T)(T)
  name.vb: IsNotNull(Of T)(T)
  spec.csharp:
  - uid: QFramework.ClassExtention.IsNotNull``1(``0)
    name: IsNotNull<T>
    nameWithType: ClassExtention.IsNotNull<T>
    fullName: QFramework.ClassExtention.IsNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.ClassExtention.IsNotNull``1(``0)
    name: IsNotNull(Of T)
    nameWithType: ClassExtention.IsNotNull(Of T)
    fullName: QFramework.ClassExtention.IsNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: QFramework.OOPExtension.ImplementsInterface``1(System.Object)
  commentId: M:QFramework.OOPExtension.ImplementsInterface``1(System.Object)
  isExternal: true
  name: ImplementsInterface<T>(Object)
  nameWithType: OOPExtension.ImplementsInterface<T>(Object)
  fullName: QFramework.OOPExtension.ImplementsInterface<T>(System.Object)
  nameWithType.vb: OOPExtension.ImplementsInterface(Of T)(Object)
  fullName.vb: QFramework.OOPExtension.ImplementsInterface(Of T)(System.Object)
  name.vb: ImplementsInterface(Of T)(Object)
  spec.csharp:
  - uid: QFramework.OOPExtension.ImplementsInterface``1(System.Object)
    name: ImplementsInterface<T>
    nameWithType: OOPExtension.ImplementsInterface<T>
    fullName: QFramework.OOPExtension.ImplementsInterface<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.OOPExtension.ImplementsInterface``1(System.Object)
    name: ImplementsInterface(Of T)
    nameWithType: OOPExtension.ImplementsInterface(Of T)
    fullName: QFramework.OOPExtension.ImplementsInterface(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: QFramework.OOPExtension
  commentId: T:QFramework.OOPExtension
  parent: QFramework
  name: OOPExtension
  nameWithType: OOPExtension
  fullName: QFramework.OOPExtension
- uid: QFramework.ReflectionExtension.InvokeByReflect(System.Object,System.String,System.Object[])
  commentId: M:QFramework.ReflectionExtension.InvokeByReflect(System.Object,System.String,System.Object[])
  isExternal: true
  name: InvokeByReflect(Object, String, Object[])
  nameWithType: ReflectionExtension.InvokeByReflect(Object, String, Object[])
  fullName: QFramework.ReflectionExtension.InvokeByReflect(System.Object, System.String, System.Object[])
  nameWithType.vb: ReflectionExtension.InvokeByReflect(Object, String, Object())
  fullName.vb: QFramework.ReflectionExtension.InvokeByReflect(System.Object, System.String, System.Object())
  name.vb: InvokeByReflect(Object, String, Object())
  spec.csharp:
  - uid: QFramework.ReflectionExtension.InvokeByReflect(System.Object,System.String,System.Object[])
    name: InvokeByReflect
    nameWithType: ReflectionExtension.InvokeByReflect
    fullName: QFramework.ReflectionExtension.InvokeByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.ReflectionExtension.InvokeByReflect(System.Object,System.String,System.Object[])
    name: InvokeByReflect
    nameWithType: ReflectionExtension.InvokeByReflect
    fullName: QFramework.ReflectionExtension.InvokeByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: QFramework.ReflectionExtension
  commentId: T:QFramework.ReflectionExtension
  parent: QFramework
  name: ReflectionExtension
  nameWithType: ReflectionExtension
  fullName: QFramework.ReflectionExtension
- uid: QFramework.ReflectionExtension.GetFieldByReflect(System.Object,System.String)
  commentId: M:QFramework.ReflectionExtension.GetFieldByReflect(System.Object,System.String)
  isExternal: true
  name: GetFieldByReflect(Object, String)
  nameWithType: ReflectionExtension.GetFieldByReflect(Object, String)
  fullName: QFramework.ReflectionExtension.GetFieldByReflect(System.Object, System.String)
  spec.csharp:
  - uid: QFramework.ReflectionExtension.GetFieldByReflect(System.Object,System.String)
    name: GetFieldByReflect
    nameWithType: ReflectionExtension.GetFieldByReflect
    fullName: QFramework.ReflectionExtension.GetFieldByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.ReflectionExtension.GetFieldByReflect(System.Object,System.String)
    name: GetFieldByReflect
    nameWithType: ReflectionExtension.GetFieldByReflect
    fullName: QFramework.ReflectionExtension.GetFieldByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: QFramework.ReflectionExtension.GetPropertyByReflect(System.Object,System.String,System.Object[])
  commentId: M:QFramework.ReflectionExtension.GetPropertyByReflect(System.Object,System.String,System.Object[])
  isExternal: true
  name: GetPropertyByReflect(Object, String, Object[])
  nameWithType: ReflectionExtension.GetPropertyByReflect(Object, String, Object[])
  fullName: QFramework.ReflectionExtension.GetPropertyByReflect(System.Object, System.String, System.Object[])
  nameWithType.vb: ReflectionExtension.GetPropertyByReflect(Object, String, Object())
  fullName.vb: QFramework.ReflectionExtension.GetPropertyByReflect(System.Object, System.String, System.Object())
  name.vb: GetPropertyByReflect(Object, String, Object())
  spec.csharp:
  - uid: QFramework.ReflectionExtension.GetPropertyByReflect(System.Object,System.String,System.Object[])
    name: GetPropertyByReflect
    nameWithType: ReflectionExtension.GetPropertyByReflect
    fullName: QFramework.ReflectionExtension.GetPropertyByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: QFramework.ReflectionExtension.GetPropertyByReflect(System.Object,System.String,System.Object[])
    name: GetPropertyByReflect
    nameWithType: ReflectionExtension.GetPropertyByReflect
    fullName: QFramework.ReflectionExtension.GetPropertyByReflect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: QFramework.AssemblyManager.DefaultCSharpAssembly*
  commentId: Overload:QFramework.AssemblyManager.DefaultCSharpAssembly
  name: DefaultCSharpAssembly
  nameWithType: AssemblyManager.DefaultCSharpAssembly
  fullName: QFramework.AssemblyManager.DefaultCSharpAssembly
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: QFramework.AssemblyManager.GetAssembly*
  commentId: Overload:QFramework.AssemblyManager.GetAssembly
  name: GetAssembly
  nameWithType: AssemblyManager.GetAssembly
  fullName: QFramework.AssemblyManager.GetAssembly
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: QFramework.AssemblyManager.GetDefaultAssemblyType*
  commentId: Overload:QFramework.AssemblyManager.GetDefaultAssemblyType
  name: GetDefaultAssemblyType
  nameWithType: AssemblyManager.GetDefaultAssemblyType
  fullName: QFramework.AssemblyManager.GetDefaultAssemblyType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: QFramework.AssemblyManager.GetTypeList*
  commentId: Overload:QFramework.AssemblyManager.GetTypeList
  name: GetTypeList
  nameWithType: AssemblyManager.GetTypeList
  fullName: QFramework.AssemblyManager.GetTypeList
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

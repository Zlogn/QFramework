### YamlMime:ManagedReference
items:
- uid: QFramework.IOExtension
  commentId: T:QFramework.IOExtension
  id: IOExtension
  parent: QFramework
  children:
  - QFramework.IOExtension.Combine(System.String[])
  - QFramework.IOExtension.CombinePath(System.String,System.String)
  - QFramework.IOExtension.CreateDirIfNotExists(System.String)
  - QFramework.IOExtension.DeleteDirIfExists(System.String)
  - QFramework.IOExtension.DeleteFileIfExists(System.String)
  - QFramework.IOExtension.EmptyDirIfExists(System.String)
  - QFramework.IOExtension.GetDirectoryName(System.String)
  - QFramework.IOExtension.GetDirPath(System.String)
  - QFramework.IOExtension.GetDirSubDirNameList(System.String)
  - QFramework.IOExtension.GetDirSubFilePathList(System.String,System.Boolean,System.String)
  - QFramework.IOExtension.GetFileExtendName(System.String)
  - QFramework.IOExtension.GetFileName(System.String)
  - QFramework.IOExtension.GetFileName(System.String,System.Char)
  - QFramework.IOExtension.GetFileNameWithoutExtend(System.String)
  - QFramework.IOExtension.GetFileNameWithoutExtention(System.String,System.Char)
  - QFramework.IOExtension.GetFilePathWithoutExtention(System.String)
  - QFramework.IOExtension.GetLastDirName(System.String)
  - QFramework.IOExtension.GetPathParentFolder(System.String)
  - QFramework.IOExtension.MakeDirectoryExist(System.String)
  - QFramework.IOExtension.MakeFileDirectoryExist(System.String)
  - QFramework.IOExtension.MakePathStandard(System.String)
  - QFramework.IOExtension.ReadText(System.String)
  langs:
  - csharp
  - vb
  name: IOExtension
  nameWithType: IOExtension
  fullName: QFramework.IOExtension
  type: Class
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: IOExtension
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 417
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n对 System.IO 的一些扩展\n"
  example: []
  syntax:
    content: public static class IOExtension
    content.vb: Public Module IOExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: QFramework.IOExtension.CreateDirIfNotExists(System.String)
  commentId: M:QFramework.IOExtension.CreateDirIfNotExists(System.String)
  id: CreateDirIfNotExists(System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: CreateDirIfNotExists(String)
  nameWithType: IOExtension.CreateDirIfNotExists(String)
  fullName: QFramework.IOExtension.CreateDirIfNotExists(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: CreateDirIfNotExists
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 427
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n创建新的文件夹,如果存在则不创建\n<pre><code>var testDir = &quot;Assets/TestFolder&quot;;\ntestDir.CreateDirIfNotExists();\n// 结果为，在 Assets 目录下创建 TestFolder</code></pre>\n"
  example: []
  syntax:
    content: public static string CreateDirIfNotExists(this string dirFullPath)
    parameters:
    - id: dirFullPath
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateDirIfNotExists(dirFullPath As String) As String
  overload: QFramework.IOExtension.CreateDirIfNotExists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.DeleteDirIfExists(System.String)
  commentId: M:QFramework.IOExtension.DeleteDirIfExists(System.String)
  id: DeleteDirIfExists(System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: DeleteDirIfExists(String)
  nameWithType: IOExtension.DeleteDirIfExists(String)
  fullName: QFramework.IOExtension.DeleteDirIfExists(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: DeleteDirIfExists
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 445
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n删除文件夹，如果存在\n<pre><code>var testDir = &quot;Assets/TestFolder&quot;;\ntestDir.DeleteDirIfExists();\n// 结果为，在 Assets 目录下删除了 TestFolder</code></pre>\n"
  example: []
  syntax:
    content: public static void DeleteDirIfExists(this string dirFullPath)
    parameters:
    - id: dirFullPath
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub DeleteDirIfExists(dirFullPath As String)
  overload: QFramework.IOExtension.DeleteDirIfExists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.EmptyDirIfExists(System.String)
  commentId: M:QFramework.IOExtension.EmptyDirIfExists(System.String)
  id: EmptyDirIfExists(System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: EmptyDirIfExists(String)
  nameWithType: IOExtension.EmptyDirIfExists(String)
  fullName: QFramework.IOExtension.EmptyDirIfExists(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: EmptyDirIfExists
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 461
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n清空 Dir（保留目录),如果存在。\n<pre><code>var testDir = &quot;Assets/TestFolder&quot;;\ntestDir.EmptyDirIfExists();\n// 结果为，清空了 TestFolder 里的内容</code></pre>\n"
  example: []
  syntax:
    content: public static void EmptyDirIfExists(this string dirFullPath)
    parameters:
    - id: dirFullPath
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub EmptyDirIfExists(dirFullPath As String)
  overload: QFramework.IOExtension.EmptyDirIfExists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.DeleteFileIfExists(System.String)
  commentId: M:QFramework.IOExtension.DeleteFileIfExists(System.String)
  id: DeleteFileIfExists(System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: DeleteFileIfExists(String)
  nameWithType: IOExtension.DeleteFileIfExists(String)
  fullName: QFramework.IOExtension.DeleteFileIfExists(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: DeleteFileIfExists
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 483
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n删除文件 如果存在\n<pre><code>// 示例\nvar filePath = &quot;Assets/Test.txt&quot;;\nFile.Create(&quot;Assets/Test);\nfilePath.DeleteFileIfExists();\n// 结果为，删除了 Test.txt</code></pre>\n"
  example: []
  syntax:
    content: public static bool DeleteFileIfExists(this string fileFullPath)
    parameters:
    - id: fileFullPath
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: '是否进行了删除操作 '
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteFileIfExists(fileFullPath As String) As Boolean
  overload: QFramework.IOExtension.DeleteFileIfExists*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.CombinePath(System.String,System.String)
  commentId: M:QFramework.IOExtension.CombinePath(System.String,System.String)
  id: CombinePath(System.String,System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: CombinePath(String, String)
  nameWithType: IOExtension.CombinePath(String, String)
  fullName: QFramework.IOExtension.CombinePath(System.String, System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: CombinePath
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 504
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n合并路径\n<pre><code>// 示例：\nApplication.dataPath.CombinePath(&quot;Resources&quot;).LogInfo();  // /projectPath/Assets/Resources</code></pre>\n"
  example: []
  syntax:
    content: public static string CombinePath(this string selfPath, string toCombinePath)
    parameters:
    - id: selfPath
      type: System.String
      description: ''
    - id: toCombinePath
      type: System.String
      description: ''
    return:
      type: System.String
      description: '合并后的路径 '
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CombinePath(selfPath As String, toCombinePath As String) As String
  overload: QFramework.IOExtension.CombinePath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.ReadText(System.String)
  commentId: M:QFramework.IOExtension.ReadText(System.String)
  id: ReadText(System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: ReadText(String)
  nameWithType: IOExtension.ReadText(String)
  fullName: QFramework.IOExtension.ReadText(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: ReadText
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 515
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n读取文本\n"
  example: []
  syntax:
    content: public static string ReadText(this string fileFullPath)
    parameters:
    - id: fileFullPath
      type: System.String
    return:
      type: System.String
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReadText(fileFullPath As String) As String
  overload: QFramework.IOExtension.ReadText*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.GetDirectoryName(System.String)
  commentId: M:QFramework.IOExtension.GetDirectoryName(System.String)
  id: GetDirectoryName(System.String)
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetDirectoryName(String)
  nameWithType: IOExtension.GetDirectoryName(String)
  fullName: QFramework.IOExtension.GetDirectoryName(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetDirectoryName
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 550
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n获取文件夹名\n"
  example: []
  syntax:
    content: public static string GetDirectoryName(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetDirectoryName(fileName As String) As String
  overload: QFramework.IOExtension.GetDirectoryName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.GetFileName(System.String,System.Char)
  commentId: M:QFramework.IOExtension.GetFileName(System.String,System.Char)
  id: GetFileName(System.String,System.Char)
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetFileName(String, Char)
  nameWithType: IOExtension.GetFileName(String, Char)
  fullName: QFramework.IOExtension.GetFileName(System.String, System.Char)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetFileName
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 562
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n获取文件名\n"
  example: []
  syntax:
    content: public static string GetFileName(string path, char separator = '/')
    parameters:
    - id: path
      type: System.String
      description: ''
    - id: separator
      type: System.Char
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetFileName(path As String, separator As Char = "/"c) As String
  overload: QFramework.IOExtension.GetFileName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.GetFileNameWithoutExtention(System.String,System.Char)
  commentId: M:QFramework.IOExtension.GetFileNameWithoutExtention(System.String,System.Char)
  id: GetFileNameWithoutExtention(System.String,System.Char)
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetFileNameWithoutExtention(String, Char)
  nameWithType: IOExtension.GetFileNameWithoutExtention(String, Char)
  fullName: QFramework.IOExtension.GetFileNameWithoutExtention(System.String, System.Char)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetFileNameWithoutExtention
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 574
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n获取不带后缀的文件名\n"
  example: []
  syntax:
    content: public static string GetFileNameWithoutExtention(string fileName, char separator = '/')
    parameters:
    - id: fileName
      type: System.String
      description: ''
    - id: separator
      type: System.Char
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetFileNameWithoutExtention(fileName As String, separator As Char = "/"c) As String
  overload: QFramework.IOExtension.GetFileNameWithoutExtention*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.GetFilePathWithoutExtention(System.String)
  commentId: M:QFramework.IOExtension.GetFilePathWithoutExtention(System.String)
  id: GetFilePathWithoutExtention(System.String)
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetFilePathWithoutExtention(String)
  nameWithType: IOExtension.GetFilePathWithoutExtention(String)
  fullName: QFramework.IOExtension.GetFilePathWithoutExtention(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetFilePathWithoutExtention
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 584
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n获取不带后缀的文件路径\n"
  example: []
  syntax:
    content: public static string GetFilePathWithoutExtention(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetFilePathWithoutExtention(fileName As String) As String
  overload: QFramework.IOExtension.GetFilePathWithoutExtention*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.MakeFileDirectoryExist(System.String)
  commentId: M:QFramework.IOExtension.MakeFileDirectoryExist(System.String)
  id: MakeFileDirectoryExist(System.String)
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: MakeFileDirectoryExist(String)
  nameWithType: IOExtension.MakeFileDirectoryExist(String)
  fullName: QFramework.IOExtension.MakeFileDirectoryExist(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: MakeFileDirectoryExist
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 595
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n使目录存在,Path可以是目录名必须是文件名\n"
  example: []
  syntax:
    content: public static void MakeFileDirectoryExist(string path)
    parameters:
    - id: path
      type: System.String
      description: ''
    content.vb: Public Shared Sub MakeFileDirectoryExist(path As String)
  overload: QFramework.IOExtension.MakeFileDirectoryExist*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.MakeDirectoryExist(System.String)
  commentId: M:QFramework.IOExtension.MakeDirectoryExist(System.String)
  id: MakeDirectoryExist(System.String)
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: MakeDirectoryExist(String)
  nameWithType: IOExtension.MakeDirectoryExist(String)
  fullName: QFramework.IOExtension.MakeDirectoryExist(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: MakeDirectoryExist
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 608
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n使目录存在\n"
  example: []
  syntax:
    content: public static void MakeDirectoryExist(string path)
    parameters:
    - id: path
      type: System.String
      description: ''
    content.vb: Public Shared Sub MakeDirectoryExist(path As String)
  overload: QFramework.IOExtension.MakeDirectoryExist*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.Combine(System.String[])
  commentId: M:QFramework.IOExtension.Combine(System.String[])
  id: Combine(System.String[])
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: Combine(String[])
  nameWithType: IOExtension.Combine(String[])
  fullName: QFramework.IOExtension.Combine(System.String[])
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: Combine
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 621
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n结合目录\n"
  example: []
  syntax:
    content: public static string Combine(params string[] paths)
    parameters:
    - id: paths
      type: System.String[]
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function Combine(ParamArray paths As String()) As String
  overload: QFramework.IOExtension.Combine*
  nameWithType.vb: IOExtension.Combine(String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: QFramework.IOExtension.Combine(System.String())
  name.vb: Combine(String())
- uid: QFramework.IOExtension.GetPathParentFolder(System.String)
  commentId: M:QFramework.IOExtension.GetPathParentFolder(System.String)
  id: GetPathParentFolder(System.String)
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetPathParentFolder(String)
  nameWithType: IOExtension.GetPathParentFolder(String)
  fullName: QFramework.IOExtension.GetPathParentFolder(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetPathParentFolder
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 638
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n获取父文件夹\n"
  example: []
  syntax:
    content: public static string GetPathParentFolder(string path)
    parameters:
    - id: path
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetPathParentFolder(path As String) As String
  overload: QFramework.IOExtension.GetPathParentFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.MakePathStandard(System.String)
  commentId: M:QFramework.IOExtension.MakePathStandard(System.String)
  id: MakePathStandard(System.String)
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: MakePathStandard(String)
  nameWithType: IOExtension.MakePathStandard(String)
  fullName: QFramework.IOExtension.MakePathStandard(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: MakePathStandard
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 654
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n使路径标准化，去除空格并将所有&apos;\\&apos;转换为&apos;/&apos;\n"
  example: []
  syntax:
    content: public static string MakePathStandard(string path)
    parameters:
    - id: path
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function MakePathStandard(path As String) As String
  overload: QFramework.IOExtension.MakePathStandard*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.GetDirSubFilePathList(System.String,System.Boolean,System.String)
  commentId: M:QFramework.IOExtension.GetDirSubFilePathList(System.String,System.Boolean,System.String)
  id: GetDirSubFilePathList(System.String,System.Boolean,System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetDirSubFilePathList(String, Boolean, String)
  nameWithType: IOExtension.GetDirSubFilePathList(String, Boolean, String)
  fullName: QFramework.IOExtension.GetDirSubFilePathList(System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetDirSubFilePathList
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 659
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  syntax:
    content: public static List<string> GetDirSubFilePathList(this string dirABSPath, bool isRecursive = true, string suffix = "")
    parameters:
    - id: dirABSPath
      type: System.String
    - id: isRecursive
      type: System.Boolean
    - id: suffix
      type: System.String
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDirSubFilePathList(dirABSPath As String, isRecursive As Boolean = True, suffix As String = "") As List(Of String)
  overload: QFramework.IOExtension.GetDirSubFilePathList*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.GetDirSubDirNameList(System.String)
  commentId: M:QFramework.IOExtension.GetDirSubDirNameList(System.String)
  id: GetDirSubDirNameList(System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetDirSubDirNameList(String)
  nameWithType: IOExtension.GetDirSubDirNameList(String)
  fullName: QFramework.IOExtension.GetDirSubDirNameList(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetDirSubDirNameList
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 695
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  syntax:
    content: public static List<string> GetDirSubDirNameList(this string dirABSPath)
    parameters:
    - id: dirABSPath
      type: System.String
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDirSubDirNameList(dirABSPath As String) As List(Of String)
  overload: QFramework.IOExtension.GetDirSubDirNameList*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.GetFileName(System.String)
  commentId: M:QFramework.IOExtension.GetFileName(System.String)
  id: GetFileName(System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetFileName(String)
  nameWithType: IOExtension.GetFileName(String)
  fullName: QFramework.IOExtension.GetFileName(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetFileName
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 704
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  syntax:
    content: public static string GetFileName(this string absOrAssetsPath)
    parameters:
    - id: absOrAssetsPath
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileName(absOrAssetsPath As String) As String
  overload: QFramework.IOExtension.GetFileName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.GetFileNameWithoutExtend(System.String)
  commentId: M:QFramework.IOExtension.GetFileNameWithoutExtend(System.String)
  id: GetFileNameWithoutExtend(System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetFileNameWithoutExtend(String)
  nameWithType: IOExtension.GetFileNameWithoutExtend(String)
  fullName: QFramework.IOExtension.GetFileNameWithoutExtend(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetFileNameWithoutExtend
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 712
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  syntax:
    content: public static string GetFileNameWithoutExtend(this string absOrAssetsPath)
    parameters:
    - id: absOrAssetsPath
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileNameWithoutExtend(absOrAssetsPath As String) As String
  overload: QFramework.IOExtension.GetFileNameWithoutExtend*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.GetFileExtendName(System.String)
  commentId: M:QFramework.IOExtension.GetFileExtendName(System.String)
  id: GetFileExtendName(System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetFileExtendName(String)
  nameWithType: IOExtension.GetFileExtendName(String)
  fullName: QFramework.IOExtension.GetFileExtendName(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetFileExtendName
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 720
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  syntax:
    content: public static string GetFileExtendName(this string absOrAssetsPath)
    parameters:
    - id: absOrAssetsPath
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileExtendName(absOrAssetsPath As String) As String
  overload: QFramework.IOExtension.GetFileExtendName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.GetDirPath(System.String)
  commentId: M:QFramework.IOExtension.GetDirPath(System.String)
  id: GetDirPath(System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetDirPath(String)
  nameWithType: IOExtension.GetDirPath(String)
  fullName: QFramework.IOExtension.GetDirPath(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetDirPath
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 732
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  syntax:
    content: public static string GetDirPath(this string absOrAssetsPath)
    parameters:
    - id: absOrAssetsPath
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDirPath(absOrAssetsPath As String) As String
  overload: QFramework.IOExtension.GetDirPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: QFramework.IOExtension.GetLastDirName(System.String)
  commentId: M:QFramework.IOExtension.GetLastDirName(System.String)
  id: GetLastDirName(System.String)
  isExtensionMethod: true
  parent: QFramework.IOExtension
  langs:
  - csharp
  - vb
  name: GetLastDirName(String)
  nameWithType: IOExtension.GetLastDirName(String)
  fullName: QFramework.IOExtension.GetLastDirName(System.String)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: GetLastDirName
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 739
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  syntax:
    content: public static string GetLastDirName(this string absOrAssetsPath)
    parameters:
    - id: absOrAssetsPath
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLastDirName(absOrAssetsPath As String) As String
  overload: QFramework.IOExtension.GetLastDirName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: QFramework
  commentId: N:QFramework
  name: QFramework
  nameWithType: QFramework
  fullName: QFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: QFramework.IOExtension.CreateDirIfNotExists*
  commentId: Overload:QFramework.IOExtension.CreateDirIfNotExists
  name: CreateDirIfNotExists
  nameWithType: IOExtension.CreateDirIfNotExists
  fullName: QFramework.IOExtension.CreateDirIfNotExists
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: QFramework.IOExtension.DeleteDirIfExists*
  commentId: Overload:QFramework.IOExtension.DeleteDirIfExists
  name: DeleteDirIfExists
  nameWithType: IOExtension.DeleteDirIfExists
  fullName: QFramework.IOExtension.DeleteDirIfExists
- uid: QFramework.IOExtension.EmptyDirIfExists*
  commentId: Overload:QFramework.IOExtension.EmptyDirIfExists
  name: EmptyDirIfExists
  nameWithType: IOExtension.EmptyDirIfExists
  fullName: QFramework.IOExtension.EmptyDirIfExists
- uid: QFramework.IOExtension.DeleteFileIfExists*
  commentId: Overload:QFramework.IOExtension.DeleteFileIfExists
  name: DeleteFileIfExists
  nameWithType: IOExtension.DeleteFileIfExists
  fullName: QFramework.IOExtension.DeleteFileIfExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: QFramework.IOExtension.CombinePath*
  commentId: Overload:QFramework.IOExtension.CombinePath
  name: CombinePath
  nameWithType: IOExtension.CombinePath
  fullName: QFramework.IOExtension.CombinePath
- uid: QFramework.IOExtension.ReadText*
  commentId: Overload:QFramework.IOExtension.ReadText
  name: ReadText
  nameWithType: IOExtension.ReadText
  fullName: QFramework.IOExtension.ReadText
- uid: QFramework.IOExtension.GetDirectoryName*
  commentId: Overload:QFramework.IOExtension.GetDirectoryName
  name: GetDirectoryName
  nameWithType: IOExtension.GetDirectoryName
  fullName: QFramework.IOExtension.GetDirectoryName
- uid: QFramework.IOExtension.GetFileName*
  commentId: Overload:QFramework.IOExtension.GetFileName
  name: GetFileName
  nameWithType: IOExtension.GetFileName
  fullName: QFramework.IOExtension.GetFileName
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: QFramework.IOExtension.GetFileNameWithoutExtention*
  commentId: Overload:QFramework.IOExtension.GetFileNameWithoutExtention
  name: GetFileNameWithoutExtention
  nameWithType: IOExtension.GetFileNameWithoutExtention
  fullName: QFramework.IOExtension.GetFileNameWithoutExtention
- uid: QFramework.IOExtension.GetFilePathWithoutExtention*
  commentId: Overload:QFramework.IOExtension.GetFilePathWithoutExtention
  name: GetFilePathWithoutExtention
  nameWithType: IOExtension.GetFilePathWithoutExtention
  fullName: QFramework.IOExtension.GetFilePathWithoutExtention
- uid: QFramework.IOExtension.MakeFileDirectoryExist*
  commentId: Overload:QFramework.IOExtension.MakeFileDirectoryExist
  name: MakeFileDirectoryExist
  nameWithType: IOExtension.MakeFileDirectoryExist
  fullName: QFramework.IOExtension.MakeFileDirectoryExist
- uid: QFramework.IOExtension.MakeDirectoryExist*
  commentId: Overload:QFramework.IOExtension.MakeDirectoryExist
  name: MakeDirectoryExist
  nameWithType: IOExtension.MakeDirectoryExist
  fullName: QFramework.IOExtension.MakeDirectoryExist
- uid: QFramework.IOExtension.Combine*
  commentId: Overload:QFramework.IOExtension.Combine
  name: Combine
  nameWithType: IOExtension.Combine
  fullName: QFramework.IOExtension.Combine
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: QFramework.IOExtension.GetPathParentFolder*
  commentId: Overload:QFramework.IOExtension.GetPathParentFolder
  name: GetPathParentFolder
  nameWithType: IOExtension.GetPathParentFolder
  fullName: QFramework.IOExtension.GetPathParentFolder
- uid: QFramework.IOExtension.MakePathStandard*
  commentId: Overload:QFramework.IOExtension.MakePathStandard
  name: MakePathStandard
  nameWithType: IOExtension.MakePathStandard
  fullName: QFramework.IOExtension.MakePathStandard
- uid: QFramework.IOExtension.GetDirSubFilePathList*
  commentId: Overload:QFramework.IOExtension.GetDirSubFilePathList
  name: GetDirSubFilePathList
  nameWithType: IOExtension.GetDirSubFilePathList
  fullName: QFramework.IOExtension.GetDirSubFilePathList
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: QFramework.IOExtension.GetDirSubDirNameList*
  commentId: Overload:QFramework.IOExtension.GetDirSubDirNameList
  name: GetDirSubDirNameList
  nameWithType: IOExtension.GetDirSubDirNameList
  fullName: QFramework.IOExtension.GetDirSubDirNameList
- uid: QFramework.IOExtension.GetFileNameWithoutExtend*
  commentId: Overload:QFramework.IOExtension.GetFileNameWithoutExtend
  name: GetFileNameWithoutExtend
  nameWithType: IOExtension.GetFileNameWithoutExtend
  fullName: QFramework.IOExtension.GetFileNameWithoutExtend
- uid: QFramework.IOExtension.GetFileExtendName*
  commentId: Overload:QFramework.IOExtension.GetFileExtendName
  name: GetFileExtendName
  nameWithType: IOExtension.GetFileExtendName
  fullName: QFramework.IOExtension.GetFileExtendName
- uid: QFramework.IOExtension.GetDirPath*
  commentId: Overload:QFramework.IOExtension.GetDirPath
  name: GetDirPath
  nameWithType: IOExtension.GetDirPath
  fullName: QFramework.IOExtension.GetDirPath
- uid: QFramework.IOExtension.GetLastDirName*
  commentId: Overload:QFramework.IOExtension.GetLastDirName
  name: GetLastDirName
  nameWithType: IOExtension.GetLastDirName
  fullName: QFramework.IOExtension.GetLastDirName

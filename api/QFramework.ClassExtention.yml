### YamlMime:ManagedReference
items:
- uid: QFramework.ClassExtention
  commentId: T:QFramework.ClassExtention
  id: ClassExtention
  parent: QFramework
  children:
  - QFramework.ClassExtention.IsNotNull``1(``0)
  - QFramework.ClassExtention.IsNull``1(``0)
  langs:
  - csharp
  - vb
  name: ClassExtention
  nameWithType: ClassExtention
  fullName: QFramework.ClassExtention
  type: Class
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: ClassExtention
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 38
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n通用的扩展，类的扩展\n"
  example: []
  syntax:
    content: public static class ClassExtention
    content.vb: Public Module ClassExtention
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: QFramework.ClassExtention.IsNull``1(``0)
  commentId: M:QFramework.ClassExtention.IsNull``1(``0)
  id: IsNull``1(``0)
  isExtensionMethod: true
  parent: QFramework.ClassExtention
  langs:
  - csharp
  - vb
  name: IsNull<T>(T)
  nameWithType: ClassExtention.IsNull<T>(T)
  fullName: QFramework.ClassExtention.IsNull<T>(T)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: IsNull
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 55
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n功能：判断是否为空\n示例：\n<pre><code>var simpleObject = new object();\n\nif (simpleObject.IsNull()) // 等价于 simpleObject == null\n{\n    // do sth\n}</code></pre>\n"
  example: []
  syntax:
    content: >-
      public static bool IsNull<T>(this T selfObj)
          where T : class
    parameters:
    - id: selfObj
      type: '{T}'
      description: 判断对象(this)
    typeParameters:
    - id: T
      description: 对象的类型（可不填）
    return:
      type: System.Boolean
      description: 是否为空
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsNull(Of T As Class)(selfObj As T) As Boolean
  overload: QFramework.ClassExtention.IsNull*
  nameWithType.vb: ClassExtention.IsNull(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: QFramework.ClassExtention.IsNull(Of T)(T)
  name.vb: IsNull(Of T)(T)
- uid: QFramework.ClassExtention.IsNotNull``1(``0)
  commentId: M:QFramework.ClassExtention.IsNotNull``1(``0)
  id: IsNotNull``1(``0)
  isExtensionMethod: true
  parent: QFramework.ClassExtention
  langs:
  - csharp
  - vb
  name: IsNotNull<T>(T)
  nameWithType: ClassExtention.IsNotNull<T>(T)
  fullName: QFramework.ClassExtention.IsNotNull<T>(T)
  type: Method
  source:
    remote:
      path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
      branch: master
      repo: git@github.com:liangxiegame/QFramework.git
    id: IsNotNull
    path: Assets/QFramework/Framework/0.Core/Core/DotNetExtensions.cs
    startLine: 75
  assemblies:
  - QFramework.Core.DotNetExtensions
  namespace: QFramework
  summary: "\n功能：判断不是为空\n示例：\n<pre><code>var simpleObject = new object();\n\nif (simpleObject.IsNotNull()) // 等价于 simpleObject != null\n{\n   // do sth\n}</code></pre>\n"
  example: []
  syntax:
    content: >-
      public static bool IsNotNull<T>(this T selfObj)
          where T : class
    parameters:
    - id: selfObj
      type: '{T}'
      description: 判断对象（this)
    typeParameters:
    - id: T
      description: 对象的类型（可不填）
    return:
      type: System.Boolean
      description: 是否不为空
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsNotNull(Of T As Class)(selfObj As T) As Boolean
  overload: QFramework.ClassExtention.IsNotNull*
  nameWithType.vb: ClassExtention.IsNotNull(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: QFramework.ClassExtention.IsNotNull(Of T)(T)
  name.vb: IsNotNull(Of T)(T)
references:
- uid: QFramework
  commentId: N:QFramework
  name: QFramework
  nameWithType: QFramework
  fullName: QFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: QFramework.ClassExtention.IsNull*
  commentId: Overload:QFramework.ClassExtention.IsNull
  name: IsNull
  nameWithType: ClassExtention.IsNull
  fullName: QFramework.ClassExtention.IsNull
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: QFramework.ClassExtention.IsNotNull*
  commentId: Overload:QFramework.ClassExtention.IsNotNull
  name: IsNotNull
  nameWithType: ClassExtention.IsNotNull
  fullName: QFramework.ClassExtention.IsNotNull
